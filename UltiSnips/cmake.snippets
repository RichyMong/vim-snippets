priority -50

# https://cmake.org/cmake/help/latest/command/define_property.html
snippet define_prop "define a property" b
define_property(${1|GLOBAL,DIRECTORY,TARGET,SOURCE,TEST,VARIABLE,CACHED_VARIABLE} PROPERTY ${2:PROPERTY_NAME}
    BRIEF_DOCS "${3:brief description}"
    FULL_DOCS "${4:detail description}"
)
endsnippet

snippet foreach "foreach" b
foreach(${1:VAR} ${2:elements})
endforeach()
endsnippet

snippet function "define a functin" b
function(${1:FUNC_NAME})
	${2:function-body}
endfunction()
endsnippet

snippet get_prop "get a property" b
get_property(${1:var} ${2|GLOBAL,DIRECTORY,TARGET,SOURCE,TEST,CACHE,VARIABLE} PROPERTY ${3:PROPERTY_NAME} ${4|SET,DEFINED,BRIEF_DOCS,FULL_DOCS})
endsnippet

snippet if "if statement" b
if(${1:expression})
	${2:statement}
endif()
endsnippet

snippet match-build-type "match the build type" b
if (CMAKE_BUILD_TYPE STREQUAL Debug)
	${1:debug}
elseif (CMAKE_BUILD_TYPE STREQUAL Release)
	${1:release}
endif()
endsnippet

snippet if-clang "if the compiler is clang" b
if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
	${0:${VISUAL}}
endif()
endsnippet

snippet if-debug "if the build type is Debug" b
if (CMAKE_BUILD_TYPE STREQUAL Debug)
	${0:${VISUAL}}
endif()
endsnippet

snippet if-relwithdebinfo "if the build type is RelWithDebInfo" b
if (CMAKE_BUILD_TYPE STREQUAL RelWithDebInfo)
	${0:${VISUAL}}
endif()
endsnippet

snippet if-release "if the build type is Release" b
if (CMAKE_BUILD_TYPE STREQUAL Release)
	${0:${VISUAL}}
endif()
endsnippet

snippet if-gcc "if the compiler is gcc" b
if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU")
	${0:${VISUAL}}
endif()
endsnippet

snippet ifelse "if else statement" b
if(${1:expression})
	${2:if-statement}
else(${3})
	${4:else-statement}
endif()
endsnippet

snippet macro "define a macro" b
macro(${1:MACRO_NAME} ${2:ARGS})
	${3:definition}
endmacro()
endsnippet

snippet status "message with STATUS level" b
message(STATUS "${1:text}")
endsnippet

snippet option "add an option" b
option(${1:NAME} "${2:desc}" ${3|ON,OFF})
endsnippet

snippet parse-args "parse function arguments" b
cmake_parse_arguments(PARSE_ARGV ${1:start_index} ${2:prefix} ${3:options}
                      ${4:one_value_keywords} ${5:multi_value_keywords})
endsnippet

# https://cmake.org/cmake/help/latest/command/set_property.html#command:set_property
snippet set_prop "set a property" b
set_property(${1|GLOBAL,DIRECTORY,TARGET,SOURCE,INSTALL,TEST,CACHE} PROPERTY ${2:NAME} ${3:VALUE})
endsnippet

snippet target-link "link a library" b
	target_link_libraries(${1:target} ${2|PUBLIC,PRIVATE,INTERFACE} ${0:somelib})
endsnippet

snippet target-include "include a directory" b
	target_include_directories(${1:target} ${2|PUBLIC,PRIVATE,INTERFACE} ${0:dir})
endsnippet

snippet target-options "add compile options" b
	target_compile_options(${1:target} ${2|PUBLIC,PRIVATE,INTERFACE} ${0:options})
endsnippet
